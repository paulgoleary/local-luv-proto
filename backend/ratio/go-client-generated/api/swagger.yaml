openapi: 3.0.0
info:
  title: Ratio API
  description: API endpoints and models for using the Ratio service
  termsOfService: http://developer.ratio.me/terms/
  contact:
    name: API Support
    url: https://help.ratio.me
    email: support@ratio.me
  version: 1.0.0
servers:
- url: https://api.staging.ratio.me
  description: Staging server
security:
- JWT: []
- ClientSecret: []
  ClientId: []
tags:
- name: Activity
  description: ""
- name: Auth
  description: ""
- name: Bank
  description: ""
- name: Client
  description: ""
- name: Config
  description: ""
- name: Crypto
  description: ""
- name: User
  description: ""
- name: Wallet
  description: ""
- name: Webhook
  description: ""
paths:
  /v1/auth/cryptoWallet:start:
    post:
      tags:
      - Auth
      summary: Start a crypto wallet authentication flow
      parameters:
      - name: ratio-client-id
        in: header
        description: Your Ratio Client Identifier
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-secret
        in: header
        description: Your Ratio Client Secret
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Start Crypto wallet auth request object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticateCryptoWalletStartRequest'
        required: true
      responses:
        "200":
          description: Start Crypto wallet auth response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticateCryptoWalletStartResponse'
        "400":
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      security:
      - JWT: []
      - ClientSecret: []
      - ClientId: []
  /v1/auth/cryptoWallet:authenticate:
    post:
      tags:
      - Auth
      summary: Authenticate a user's crypto wallet
      parameters:
      - name: ratio-client-id
        in: header
        description: Your Ratio Client Identifier
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-secret
        in: header
        description: Your Ratio Client Secret
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Crypto wallet auth request object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticateCryptoWalletRequest'
        required: true
      responses:
        "200":
          description: Authentication response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        "400":
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      security:
      - JWT: []
      - ClientSecret: []
      - ClientId: []
  /v1/auth/cryptoWallet:addToUser:
    post:
      tags:
      - Auth
      summary: Adds an unverified crypto wallet to a user. A crypto wallet remains
        unverified until the user authenticates it.
      parameters:
      - name: ratio-client-id
        in: header
        description: Your Ratio Client Identifier
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-secret
        in: header
        description: Your Ratio Client Secret
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Add Unverified Crypto wallet auth request object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddUnverifiedCryptoWalletRequest'
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      security:
      - JWT: []
      - ClientSecret: []
      - ClientId: []
  /v1/auth/otp/sms:send:
    post:
      tags:
      - Auth
      summary: Send an SMS OTP to the user
      parameters:
      - name: ratio-client-id
        in: header
        description: Your Ratio Client Identifier
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-secret
        in: header
        description: Your Ratio Client Secret
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Send SMS OTP request object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendSmsOtpRequest'
        required: true
      responses:
        "200":
          description: Send SMS OTP response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendSmsOtpResponse'
        "400":
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      security:
      - JWT: []
      - ClientSecret: []
      - ClientId: []
  /v1/auth/otp/sms:authenticate:
    post:
      tags:
      - Auth
      summary: Authenticate a user with an SMS OTP
      parameters:
      - name: ratio-client-id
        in: header
        description: Your Ratio Client Identifier
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-secret
        in: header
        description: Your Ratio Client Secret
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Authenticate SMS OTP request object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticateSmsOtpRequest'
        required: true
      responses:
        "200":
          description: Authentication response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        "400":
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Invalid OTP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      security:
      - JWT: []
      - ClientSecret: []
      - ClientId: []
  /v1/auth/otp/email:send:
    post:
      tags:
      - Auth
      summary: Send an Email OTP to the user
      parameters:
      - name: ratio-client-id
        in: header
        description: Your Ratio Client Identifier
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-secret
        in: header
        description: Your Ratio Client Secret
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Send Email OTP request object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailOtpRequest'
        required: true
      responses:
        "200":
          description: Send Email OTP response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailOtpResponse'
        "400":
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      security:
      - JWT: []
      - ClientSecret: []
      - ClientId: []
  /v1/auth/otp/email:authenticate:
    post:
      tags:
      - Auth
      summary: Authenticate a user with an Email OTP
      parameters:
      - name: ratio-client-id
        in: header
        description: Your Ratio Client Identifier
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-secret
        in: header
        description: Your Ratio Client Secret
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Authenticate Email OTP request object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticateEmailOtpRequest'
        required: true
      responses:
        "200":
          description: Authentication response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        "400":
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Invalid OTP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      security:
      - JWT: []
      - ClientSecret: []
      - ClientId: []
  /v1/auth/magicLink:verify:
    post:
      tags:
      - Auth
      summary: Verify a user's email with a magic link
      parameters: []
      requestBody:
        description: Authenticate Email OTP request object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyMagicLinkRequest'
        required: true
      responses:
        "200":
          description: Success
        "400":
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      security: []
  /v1/client/sessions:
    post:
      tags:
      - Client
      summary: Creates a client session
      parameters:
      - name: ratio-client-id
        in: header
        description: Your Ratio Client Identifier
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-secret
        in: header
        description: Your Ratio Client Secret
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Create client session request object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClientSessionRequest'
        required: true
      responses:
        "201":
          description: Client session object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientSession'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      security:
      - ClientSecret: []
      - ClientId: []
  /v1/client/sessions/{sessionId}:
    get:
      tags:
      - Client
      summary: Returns the client session
      parameters:
      - name: sessionId
        in: path
        description: Session ID
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Client session object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientSession'
        "404":
          description: Session not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "410":
          description: Session has already been retrieved and is no longer accessible
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      security: []
  /v1/config:
    get:
      tags:
      - Config
      summary: Gets the client configuration
      parameters:
      - name: ratio-client-id
        in: header
        description: Your Ratio Client Identifier
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-secret
        in: header
        description: Your Ratio Client Secret
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConfigResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      security:
      - ClientSecret: []
      - ClientId: []
  /v1/crypto/prices:
    get:
      tags:
      - Crypto
      summary: Get crypto prices
      parameters:
      - name: ratio-client-id
        in: header
        description: Your Ratio Client Identifier
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-secret
        in: header
        description: Your Ratio Client Secret
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: cryptoCurrencies
        in: query
        description: The crypto currencies to get prices for (comma separated)
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: fiatCurrency
        in: query
        description: The fiat currency to quote the prices in
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: includeNetworkFees
        in: query
        description: Whether to include network fees in the response
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - "true"
          - "false"
      responses:
        "200":
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCryptoPricesResponse'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      security:
      - ClientSecret: []
      - ClientId: []
  /v1/users/{userId}:
    get:
      tags:
      - User
      summary: This returns the current authenticated user
      parameters:
      - name: userId
        in: path
        description: The id of the user
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-id
        in: header
        description: Your Ratio Client Identifier
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-secret
        in: header
        description: Your Ratio Client Secret
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      security:
      - ClientSecret: []
      - ClientId: []
  /v1/users:
    post:
      tags:
      - User
      summary: This creates a new user
      parameters:
      - name: ratio-client-id
        in: header
        description: Your Ratio Client Identifier
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-secret
        in: header
        description: Your Ratio Client Secret
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: User to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        required: true
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      security:
      - JWT: []
      - ClientSecret: []
      - ClientId: []
  /v1/users/{userId}/kyc:
    post:
      tags:
      - User
      summary: This initiates the KYC process for a user
      parameters:
      - name: userId
        in: path
        description: User ID
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-id
        in: header
        description: Your Ratio Client Identifier
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-secret
        in: header
        description: Your Ratio Client Secret
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Submit kyc request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitKycRequest'
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: User has already submitted KYC
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      security:
      - JWT: []
      - ClientSecret: []
      - ClientId: []
  /v1/users/{userId}/idv:
    post:
      tags:
      - User
      summary: This initiates the IDV process for user
      parameters:
      - name: userId
        in: path
        description: User ID
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-id
        in: header
        description: Your Ratio Client Identifier
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-secret
        in: header
        description: Your Ratio Client Secret
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Response of the IDV request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdvResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: User has not yet submitted KYC
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      security:
      - JWT: []
      - ClientSecret: []
      - ClientId: []
  /v1/users/{userId}/wallets:
    get:
      tags:
      - Wallet
      summary: This returns the wallets for a user
      parameters:
      - name: userId
        in: path
        description: User ID
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-id
        in: header
        description: Your Ratio Client Identifier
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-secret
        in: header
        description: Your Ratio Client Secret
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Wallets for the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallets'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      security:
      - JWT: []
      - ClientSecret: []
      - ClientId: []
    post:
      tags:
      - Wallet
      summary: This connects a wallet to a user
      parameters:
      - name: userId
        in: path
        description: User ID
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-id
        in: header
        description: Your Ratio Client Identifier
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-secret
        in: header
        description: Your Ratio Client Secret
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Wallet to be connected
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectWalletRequest'
        required: true
      responses:
        "201":
          description: Wallet for the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
        "400":
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: Wallet already connected
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: Wallet not valid for selected network
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      security:
      - JWT: []
      - ClientSecret: []
      - ClientId: []
  /v1/users/{userId}/wallets/{walletId}:
    get:
      tags:
      - Wallet
      summary: This returns the specified wallet for a user
      parameters:
      - name: userId
        in: path
        description: User ID
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: walletId
        in: path
        description: Wallet ID
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-id
        in: header
        description: Your Ratio Client Identifier
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-secret
        in: header
        description: Your Ratio Client Secret
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Wallet for the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Wallet/User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      security:
      - ClientSecret: []
      - ClientId: []
    patch:
      tags:
      - Wallet
      summary: This updates a wallet for a user
      parameters:
      - name: userId
        in: path
        description: User ID
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: walletId
        in: path
        description: Wallet ID
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-id
        in: header
        description: Your Ratio Client Identifier
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-secret
        in: header
        description: Your Ratio Client Secret
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Wallet to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWalletRequest'
        required: true
      responses:
        "200":
          description: Wallet for the user successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
        "400":
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: User or wallet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      security:
      - JWT: []
      - ClientSecret: []
      - ClientId: []
  /v1/users/{userId}/banks/{bankId}:
    get:
      tags:
      - Bank
      summary: Get a Bank Account by ID for a user
      parameters:
      - name: userId
        in: path
        description: User ID
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: bankId
        in: path
        description: Bank Account ID
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-id
        in: header
        description: Your Ratio Client Identifier
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-secret
        in: header
        description: Your Ratio Client Secret
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Bank Account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Bank not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      security:
      - ClientSecret: []
      - ClientId: []
    delete:
      tags:
      - Bank
      summary: Deletes a Bank link for a user
      parameters:
      - name: userId
        in: path
        description: User ID
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: bankId
        in: path
        description: Bank Account ID
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-id
        in: header
        description: Your Ratio Client Identifier
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-secret
        in: header
        description: Your Ratio Client Secret
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Bank link deleted
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Bank not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      security:
      - JWT: []
      - ClientSecret: []
      - ClientId: []
  /v1/users/{userId}/banks/{bankId}/ach:
    post:
      tags:
      - Bank
      summary: This submits a request to initiate an ACH exchange for Crypto
      parameters:
      - name: userId
        in: path
        description: User ID
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: bankId
        in: path
        description: Bank Account ID
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-id
        in: header
        description: Your Ratio Client Identifier
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-secret
        in: header
        description: Your Ratio Client Secret
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Request object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiateAchRequest'
        required: true
      responses:
        "202":
          description: Response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateAchResponse'
        "400":
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      security:
      - JWT: []
      - ClientSecret: []
      - ClientId: []
  /v1/users/{userId}/activity:
    get:
      tags:
      - Activity
      summary: This returns a paginated response of Activity items
      parameters:
      - name: userId
        in: path
        description: User ID
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-id
        in: header
        description: Your Ratio Client Identifier
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-secret
        in: header
        description: Your Ratio Client Secret
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: pageToken
        in: query
        description: Query for the next page of activity using the specified token
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: Query for activity with the specified page size
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: fromCreateTime
        in: query
        description: Query for activity created on/after the specified time
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: toCreateTime
        in: query
        description: Query for activity created on/before the specified time
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: walletId
        in: query
        description: Query for activity using the specified wallet ID
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: cryptoCurrency
        in: query
        description: Query for activity containing the specified crypto currency
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: cryptoStatus
        in: query
        description: Query for activity with crypto in the specified status(es)
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      - name: fiatStatus
        in: query
        description: Query for activity with fiat in the specified status(es)
        required: false
        deprecated: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityItems'
        "400":
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      security:
      - ClientSecret: []
      - ClientId: []
  /v1/users/{userId}/activity/{activityId}:
    get:
      tags:
      - Activity
      summary: This returns an Activity item
      parameters:
      - name: userId
        in: path
        description: User ID
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: activityId
        in: path
        description: Activity ID
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-id
        in: header
        description: Your Ratio Client Identifier
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-secret
        in: header
        description: Your Ratio Client Secret
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityItem'
        "400":
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Activity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      security:
      - ClientSecret: []
      - ClientId: []
  /v1/users/{userId}:calculateAchLimits:
    post:
      tags:
      - User
      summary: Calculate the ACH limits for the user
      parameters:
      - name: userId
        in: path
        description: User ID
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-id
        in: header
        description: Your Ratio Client Identifier
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculateAchLimitsResponse'
              examples:
                example1:
                  summary: Success response
                  value:
                    instant:
                      currency: USD
                      limit: "1000"
                      used: "250"
                      remaining: "750"
                    daily:
                      currency: USD
                      limit: "2000"
                      used: "400"
                      remaining: "1600"
                    weekly:
                      currency: USD
                      limit: "15000"
                      used: "4500"
                      remaining: "11500"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: Unable to calculate ACH limit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      security:
      - JWT: []
  /v1/users/{userId}/banks:requestLink:
    post:
      tags:
      - Bank
      summary: Requests a bank account link token for a user
      parameters:
      - name: userId
        in: path
        description: User ID
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-id
        in: header
        description: Your Ratio Client Identifier
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-secret
        in: header
        description: Your Ratio Client Secret
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Request object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestBankLinkRequest'
        required: true
      responses:
        "200":
          description: Response with link token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestBankLinkResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      security:
      - JWT: []
      - ClientSecret: []
      - ClientId: []
  /v1/users/{userId}/banks:activateLink:
    post:
      tags:
      - Bank
      summary: Activates a bank account link for a user
      parameters:
      - name: userId
        in: path
        description: User ID
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-id
        in: header
        description: Your Ratio Client Identifier
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-secret
        in: header
        description: Your Ratio Client Secret
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Request with public token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateBankLinkRequest'
        required: true
      responses:
        "200":
          description: Bank account link activated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivateBankLinkResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "409":
          description: A bank account is already linked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      security:
      - JWT: []
      - ClientSecret: []
      - ClientId: []
  /v1/users/{userId}/banks/{bankId}:requestLink:
    post:
      tags:
      - Bank
      summary: Requests an update link token to re-login to an existing bank account
      parameters:
      - name: userId
        in: path
        description: User ID
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: bankId
        in: path
        description: Bank ID
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-id
        in: header
        description: Your Ratio Client Identifier
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-secret
        in: header
        description: Your Ratio Client Secret
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Request object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestBankUpdateLinkRequest'
        required: true
      responses:
        "200":
          description: Response with link token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestBankLinkResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Bank Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: Bank account does not require login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      security:
      - JWT: []
      - ClientSecret: []
      - ClientId: []
  /v1/webhooks/events:
    get:
      tags:
      - Webhook
      summary: Get all webhook events
      parameters:
      - name: ratio-client-id
        in: header
        description: Your Ratio Client Identifier
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-secret
        in: header
        description: Your Ratio Client Secret
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The webhook events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookEvents'
              examples:
                example1:
                  summary: Success response
                  value:
                    items:
                    - ACTIVITY_UPDATED
                    - BANK_UPDATED
                    - KYC_UPDATED
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      security:
      - ClientSecret: []
      - ClientId: []
  /v1/webhooks/{webhookId}:
    get:
      tags:
      - Webhook
      summary: This returns the requested webhook
      parameters:
      - name: webhookId
        in: path
        description: The id of the webhook
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-id
        in: header
        description: Your Ratio Client Identifier
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-secret
        in: header
        description: Your Ratio Client Secret
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
              examples:
                example1:
                  summary: Success response
                  value:
                    id: 00000000-0000-0000-0000-000000000000
                    name: My Webhook
                    url: https://example.com/webhook
                    events:
                    - ACTIVITY_UPDATED
                    - BANK_UPDATED
                    - KYC_UPDATED
                    createdAt: 2022-10-29T12:00:00.000Z
                    updatedAt: 2022-10-30T12:00:00.000Z
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Webhook not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      security:
      - ClientSecret: []
      - ClientId: []
    delete:
      tags:
      - Webhook
      summary: This deletes the requested webhook
      parameters:
      - name: webhookId
        in: path
        description: The id of the webhook
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-id
        in: header
        description: Your Ratio Client Identifier
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-secret
        in: header
        description: Your Ratio Client Secret
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Webhook not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      security:
      - ClientSecret: []
      - ClientId: []
    patch:
      tags:
      - Webhook
      summary: This updates the requested webhook
      parameters:
      - name: webhookId
        in: path
        description: The id of the webhook
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-id
        in: header
        description: Your Ratio Client Identifier
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-secret
        in: header
        description: Your Ratio Client Secret
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Request object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWebhookRequest'
            examples:
              example1:
                summary: Update Name request
                value: |-
                  {
                   "name": "My Webhook"
                  }
              example2:
                summary: Update Events request
                value: |-
                  {
                   "events": [
                    "ACTIVITY_UPDATED",
                    "BANK_UPDATED",
                    "KYC_UPDATED"
                   ]
                  }
              example3:
                summary: Update URL request
                value: |-
                  {
                   "url": "https://example.com/somethingDifferent"
                  }
              example4:
                summary: Update multiple request
                value: |-
                  {
                   "name": "My Webhook",
                   "url": "https://example.com/somethingDifferent"
                  }
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
              examples:
                example1:
                  summary: Success response
                  value:
                    id: 00000000-0000-0000-0000-000000000000
                    name: My Webhook
                    url: https://example.com/webhook
                    events:
                    - ACTIVITY_UPDATED
                    - BANK_UPDATED
                    - KYC_UPDATED
                    createdAt: 2022-10-29T12:00:00.000Z
                    updatedAt: 2022-10-30T12:00:00.000Z
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Webhook not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      security:
      - ClientSecret: []
      - ClientId: []
  /v1/webhooks:
    get:
      tags:
      - Webhook
      summary: This returns the client's webhooks
      parameters:
      - name: ratio-client-id
        in: header
        description: Your Ratio Client Identifier
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-secret
        in: header
        description: Your Ratio Client Secret
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhooks'
              examples:
                example1:
                  summary: Success response
                  value:
                    items:
                    - id: 00000000-0000-0000-0000-000000000000
                      name: My Webhook
                      url: https://example.com/webhook
                      events:
                      - ACTIVITY_UPDATED
                      - BANK_UPDATED
                      - KYC_UPDATED
                      createdAt: 2022-10-29T12:00:00.000Z
                      updatedAt: 2022-10-30T12:00:00.000Z
                    - id: 11111111-0000-0000-0000-000000000001
                      name: Another Webhook
                      url: https://example.com/webhookTwo
                      events:
                      - ACTIVITY_UPDATED
                      - KYC_UPDATED
                      createdAt: 2022-10-29T12:00:00.000Z
                      updatedAt: 2022-10-30T12:00:00.000Z
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      security:
      - ClientSecret: []
      - ClientId: []
    post:
      tags:
      - Webhook
      summary: This creates a new webhook
      parameters:
      - name: ratio-client-id
        in: header
        description: Your Ratio Client Identifier
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      - name: ratio-client-secret
        in: header
        description: Your Ratio Client Secret
        required: true
        deprecated: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Request object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWebhookRequest'
            examples:
              example1:
                summary: Create new webhook request
                value: |-
                  {
                   "name": "My Webhook",
                   "url": "https://example.com/webhook",
                   "events": [
                     "ACTIVITY_UPDATED",
                     "BANK_UPDATED",
                     "KYC_UPDATED"
                   ]
                  }
        required: true
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
              examples:
                example1:
                  summary: Success response
                  value:
                    id: 00000000-0000-0000-0000-000000000000
                    name: My Webhook
                    url: https://example.com/webhook
                    events:
                    - ACTIVITY_UPDATED
                    - BANK_UPDATED
                    - KYC_UPDATED
                    secret: secrethashstring
                    createdAt: 2022-10-29T12:00:00.000Z
                    updatedAt: 2022-10-30T12:00:00.000Z
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
      security:
      - ClientSecret: []
      - ClientId: []
components:
  schemas:
    Wallets:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          description: The wallets of the user
          items:
            $ref: '#/components/schemas/Wallet'
        nextPageToken:
          type: string
          description: "The token for the next page of results, if available"
      description: ""
      example:
        nextPageToken: nextPageToken
        items:
        - address: address
          createTime: createTime
          name: name
          updateTime: updateTime
          id: id
          type: EVM
        - address: address
          createTime: createTime
          name: name
          updateTime: updateTime
          id: id
          type: EVM
    ActivityItems:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          description: The activity items of the user
          items:
            $ref: '#/components/schemas/ActivityItem'
        nextPageToken:
          type: string
          description: "The token for the next page of results, if available"
      description: ""
      example:
        nextPageToken: nextPageToken
        items:
        - metadata: {}
          createTime: createTime
          fiat:
            bankAccount:
              linkStatus: INACTIVE
              createTime: createTime
              verificationStatus: IN_REVIEW
              name: name
              updateTime: updateTime
              id: id
              mask: mask
            amount: amount
            fundingMethod: ACH_ORIGINATED_STANDARD
            currency: USD
            status: PENDING
            direction: CREDIT
          updateTime: updateTime
          id: id
          crypto:
            amount: amount
            wallet:
              address: address
              createTime: createTime
              name: name
              updateTime: updateTime
              id: id
              type: EVM
            ratioFee: ratioFee
            price: price
            networkFee: networkFee
            currency: ETH
            transactionHash: transactionHash
            status: PENDING
            direction: CREDIT
        - metadata: {}
          createTime: createTime
          fiat:
            bankAccount:
              linkStatus: INACTIVE
              createTime: createTime
              verificationStatus: IN_REVIEW
              name: name
              updateTime: updateTime
              id: id
              mask: mask
            amount: amount
            fundingMethod: ACH_ORIGINATED_STANDARD
            currency: USD
            status: PENDING
            direction: CREDIT
          updateTime: updateTime
          id: id
          crypto:
            amount: amount
            wallet:
              address: address
              createTime: createTime
              name: name
              updateTime: updateTime
              id: id
              type: EVM
            ratioFee: ratioFee
            price: price
            networkFee: networkFee
            currency: ETH
            transactionHash: transactionHash
            status: PENDING
            direction: CREDIT
    Webhooks:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          description: The client's webhook
          items:
            $ref: '#/components/schemas/Webhook'
      description: ""
      example:
        items:
        - createTime: createTime
          name: name
          updateTime: updateTime
          id: id
          secret: secret
          events:
          - events
          - events
        - createTime: createTime
          name: name
          updateTime: updateTime
          id: id
          secret: secret
          events:
          - events
          - events
    WebhookEvents:
      required:
      - items
      type: object
      properties:
        items:
          type: array
          description: The available webhook events
          items:
            type: string
      description: ""
      example:
        items:
        - items
        - items
    AchLimit:
      type: object
      properties:
        currency:
          type: string
          description: The currency for the limit
        limit:
          type: string
          description: The maximum allowable sum of ACH transaction amounts
        used:
          type: string
          description: The current sum of ACH transaction amounts by the ACH limit
            type (e.g. daily)
        remaining:
          type: string
          description: "The remaining allowable sum, calculated as the delta between\
            \ the limit and used values"
      description: ""
      example:
        limit: limit
        currency: currency
        used: used
        remaining: remaining
    ActivityItemFiat:
      type: object
      properties:
        status:
          type: string
          description: The status of the fiat activity item
          enum:
          - PENDING
          - COMPLETED
          - FAILED
        currency:
          type: string
          description: The fiat currency of the activity item
          enum:
          - USD
        amount:
          type: string
          description: The amount of fiat currency exchanged
        direction:
          type: string
          description: The direction the fiat is moving
          enum:
          - CREDIT
          - DEBIT
        fundingMethod:
          type: string
          description: "The method used for fiat, if funded"
          enum:
          - ACH_ORIGINATED_STANDARD
          - ACH_ORIGINATED_INSTANT
          - ACH_RECEIVED
        bankAccount:
          $ref: '#/components/schemas/BankAccount'
      description: ""
      example:
        bankAccount:
          linkStatus: INACTIVE
          createTime: createTime
          verificationStatus: IN_REVIEW
          name: name
          updateTime: updateTime
          id: id
          mask: mask
        amount: amount
        fundingMethod: ACH_ORIGINATED_STANDARD
        currency: USD
        status: PENDING
        direction: CREDIT
    ActivityItemCrypto:
      type: object
      properties:
        status:
          type: string
          description: The status of the crypto activity item
          enum:
          - PENDING
          - COMPLETED
          - FAILED
        currency:
          type: string
          description: The crypto currency acquired for the activity item
          enum:
          - ETH
          - MATIC
          - USDC_ETHEREUM
          - USDC_POLYGON
          - AMKT_POLYGON
        wallet:
          $ref: '#/components/schemas/Wallet'
        direction:
          type: string
          description: The direction the crypto is moving
          enum:
          - CREDIT
          - DEBIT
        amount:
          type: string
          description: The amount of crypto currency acquired
        price:
          type: string
          description: The price of a single unit of the crypto currency; specified
            in the fiat currency
        networkFee:
          type: string
          description: The network fee to execute the crypto transaction; specified
            in the fiat currency
        ratioFee:
          type: string
          description: The Ratio fee to execute the crypto transaction; specified
            in the fiat currency
        transactionHash:
          type: string
          description: The on-chain transaction hash of the activity item
      description: ""
      example:
        amount: amount
        wallet:
          address: address
          createTime: createTime
          name: name
          updateTime: updateTime
          id: id
          type: EVM
        ratioFee: ratioFee
        price: price
        networkFee: networkFee
        currency: ETH
        transactionHash: transactionHash
        status: PENDING
        direction: CREDIT
    ActivityItem:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the allocation
        createTime:
          type: string
          description: The time the allocation was created
        updateTime:
          type: string
          description: The time the allocation was last updated
        fiat:
          $ref: '#/components/schemas/ActivityItemFiat'
        crypto:
          $ref: '#/components/schemas/ActivityItemCrypto'
        metadata:
          type: object
          description: (Optional) Additional metadata of the activity item
      description: ""
      example:
        metadata: {}
        createTime: createTime
        fiat:
          bankAccount:
            linkStatus: INACTIVE
            createTime: createTime
            verificationStatus: IN_REVIEW
            name: name
            updateTime: updateTime
            id: id
            mask: mask
          amount: amount
          fundingMethod: ACH_ORIGINATED_STANDARD
          currency: USD
          status: PENDING
          direction: CREDIT
        updateTime: updateTime
        id: id
        crypto:
          amount: amount
          wallet:
            address: address
            createTime: createTime
            name: name
            updateTime: updateTime
            id: id
            type: EVM
          ratioFee: ratioFee
          price: price
          networkFee: networkFee
          currency: ETH
          transactionHash: transactionHash
          status: PENDING
          direction: CREDIT
    BankAccount:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the bank account
        createTime:
          type: string
          description: The time the bank account connection was created
        updateTime:
          type: string
          description: The time the bank account connection was last updated
        name:
          type: string
          description: The name of the bank account
        mask:
          type: string
          description: The account number mask
        linkStatus:
          type: string
          description: The status of the bank account link to the user
          enum:
          - INACTIVE
          - ACTIVE
          - LOGIN_REQUIRED
        verificationStatus:
          type: string
          description: The status of the bank account user identity verification
          enum:
          - IN_REVIEW
          - APPROVED
          - DECLINED
      description: ""
      example:
        linkStatus: INACTIVE
        createTime: createTime
        verificationStatus: IN_REVIEW
        name: name
        updateTime: updateTime
        id: id
        mask: mask
    ClientSession:
      type: object
      properties:
        id:
          type: string
          description: The session ID
        createTime:
          type: string
          description: The time the session was created
        updateTime:
          type: string
          description: The time the session was last updated
        signingAddress:
          type: string
          description: The address of the signing wallet
        signingType:
          type: string
          description: The type of wallet to authenticate
          enum:
          - EVM
        depositAddress:
          type: string
          description: The address of the deposit wallet
        depositType:
          type: string
          description: The type of wallet to authenticate
          enum:
          - EVM
        userMask:
          $ref: '#/components/schemas/UserMask'
        sessionJwt:
          type: string
          description: The user's session JWT
      description: ""
      example:
        signingAddress: signingAddress
        signingType: EVM
        createTime: createTime
        depositAddress: depositAddress
        updateTime: updateTime
        id: id
        sessionJwt: sessionJwt
        userMask:
          createTime: createTime
          emailMask: emailMask
          updateTime: updateTime
          id: id
          phoneMask: phoneMask
        depositType: EVM
    Error:
      type: object
      properties:
        message:
          type: string
          description: Error message
        createTime:
          type: string
          description: Error creation time
        code:
          type: string
          description: Error code
        data:
          type: object
          description: Error data
      description: ""
    Kyc:
      type: object
      properties:
        createTime:
          type: string
          description: The time the KYC was created
        updateTime:
          type: string
          description: The time the KYC was last updated
        status:
          type: string
          description: The overall status of the KYC verification
          enum:
          - UNKNOWN
          - NOT_STARTED
          - SUBMITTED
          - IN_REVIEW
          - APPROVED
          - DECLINED
        addressResult:
          type: string
          description: The result of the KYC address verification
          enum:
          - UNKNOWN
          - NOT_STARTED
          - SUBMITTED
          - IN_REVIEW
          - APPROVED
          - DECLINED
        dobResult:
          type: string
          description: The result of the KYC date of birth verification
          enum:
          - UNKNOWN
          - NOT_STARTED
          - SUBMITTED
          - IN_REVIEW
          - APPROVED
          - DECLINED
        fraudResult:
          type: string
          description: The result of the KYC fraud verification
          enum:
          - UNKNOWN
          - NOT_STARTED
          - SUBMITTED
          - IN_REVIEW
          - APPROVED
          - DECLINED
        idvResult:
          type: string
          description: The result of the KYC identity documentation verification
          enum:
          - UNKNOWN
          - NOT_STARTED
          - SUBMITTED
          - IN_REVIEW
          - APPROVED
          - DECLINED
      description: ""
      example:
        idvResult: UNKNOWN
        createTime: createTime
        dobResult: UNKNOWN
        updateTime: updateTime
        addressResult: UNKNOWN
        fraudResult: UNKNOWN
        status: UNKNOWN
    Payroll:
      type: object
      properties:
        createTime:
          type: string
          description: The time the payroll connection was created
        updateTime:
          type: string
          description: The time the payroll connection was last updated
        provider:
          type: string
          description: The provider for the payroll
          enum:
          - OTHER
          - ADP
          - WORKDAY
          - PAYCHEX
          - GUSTO
          - MANUAL
        distribution:
          type: string
          description: The amount being distributed from this payroll
      description: ""
    ActivateBankLinkRequest:
      required:
      - publicToken
      type: object
      properties:
        publicToken:
          type: string
          description: The public token from the Plaid integration
      description: ""
    AddUnverifiedCryptoWalletRequest:
      required:
      - walletAddress
      - walletType
      type: object
      properties:
        walletAddress:
          type: string
          description: The wallet address to authenticate
        walletType:
          type: string
          description: The type of wallet to authenticate
          enum:
          - EVM
      description: ""
    AuthenticateCryptoWalletStartRequest:
      required:
      - walletAddress
      - walletType
      type: object
      properties:
        walletAddress:
          type: string
          description: The wallet address to authenticate
        walletType:
          type: string
          description: The type of wallet to authenticate
          enum:
          - EVM
      description: ""
    AuthenticateCryptoWalletRequest:
      required:
      - signature
      - walletAddress
      - walletType
      type: object
      properties:
        walletAddress:
          type: string
          description: The wallet address to authenticate
        walletType:
          type: string
          description: The type of wallet to authenticate
          enum:
          - EVM
        signature:
          type: string
          description: The signature of the challenge
      description: ""
    AuthenticateEmailOtpRequest:
      required:
      - emailId
      - otp
      type: object
      properties:
        otp:
          type: string
          description: The OTP to authenticate
        emailId:
          type: string
          description: The phone identifier to authenticate
      description: ""
    AuthenticateSmsOtpRequest:
      required:
      - otp
      - phoneId
      type: object
      properties:
        otp:
          type: string
          description: The OTP to authenticate
        phoneId:
          type: string
          description: The phone identifier to authenticate
      description: ""
    ConnectWalletRequest:
      required:
      - address
      - type
      type: object
      properties:
        address:
          type: string
          description: The network address of the wallet
        type:
          type: string
          description: The type of wallet to authenticate
          enum:
          - EVM
        name:
          type: string
          description: A name for the wallet
      description: ""
    CreateClientSessionRequest:
      required:
      - signingAddress
      - signingType
      type: object
      properties:
        signingAddress:
          type: string
          description: The wallet address that will be used to authenticate
        signingType:
          type: string
          description: The type of wallet to authenticate
          enum:
          - EVM
        depositAddress:
          type: string
          description: "The wallet address that will be used as the deposit target.\
            \ If not provided, the signing address will be used"
      description: ""
    CreateUserRequest:
      required:
      - acceptedTerms
      - country
      - email
      - firstName
      - lastName
      - phone
      type: object
      properties:
        firstName:
          type: string
          description: The first name of the user
        middleName:
          type: string
          description: The middle name of the user
        lastName:
          type: string
          description: The last name of the user
        email:
          type: string
          description: The email of the user
        country:
          type: string
          description: "The country of the user (Format: ISO 3166 alpha-2)"
        phone:
          type: string
          description: "The phone number of the user (Format: E-164)"
        acceptedTerms:
          type: boolean
          description: A boolean indicating the user has accepted the terms
      description: ""
    CreateWebhookRequest:
      required:
      - events
      - url
      type: object
      properties:
        url:
          type: string
          description: The url for the client's webhook endpoint
        events:
          type: array
          description: The events to subscribe to
          items:
            type: string
          enum:
          - KYC_UPDATED
          - ACTIVITY_UPDATED
          - BANK_UPDATED
        name:
          maxLength: 50
          minLength: 4
          type: string
          description: A name for the webhook
      description: ""
    InitiateAchRequest:
      required:
      - cryptoCurrency
      - fiatAmount
      - type
      - walletId
      type: object
      properties:
        fiatAmount:
          type: string
          description: The amount in fiat to be exchanged
        cryptoCurrency:
          type: string
          description: The crypto currency to be purchased
          enum:
          - ETH
          - MATIC
          - USDC_ETHEREUM
          - USDC_POLYGON
          - AMKT_POLYGON
        walletId:
          type: string
          description: The ID of the wallet to receive the crypto
        type:
          type: string
          description: The type of ACH request
          enum:
          - STANDARD
          - INSTANT
      description: ""
    RequestBankLinkRequest:
      type: object
      properties:
        redirectUri:
          type: string
          description: A URI indicating the destination after completing the OAuth
            authentication Link flow. Must be an https URI that contains no query
            parameters. Should not be set if using androidPackageName
        androidPackageName:
          type: string
          description: The name of your app's Android package. Should not be set if
            using redirectUri
      description: ""
    RequestBankUpdateLinkRequest:
      type: object
      properties:
        redirectUri:
          type: string
          description: A URI indicating the destination after completing the OAuth
            authentication Link flow. Must be an https URI that contains no query
            parameters. Should not be set if using androidPackageName
        androidPackageName:
          type: string
          description: The name of your app's Android package. Should not be set if
            using redirectUri
      description: ""
    SendEmailOtpRequest:
      type: object
      properties:
        emailAddress:
          type: string
          description: The Email Address to send the Email OTP to
      description: ""
    SendSmsOtpRequest:
      type: object
      properties:
        phoneNumber:
          type: string
          description: The phone number to send the SMS OTP to
      description: ""
    SubmitKycRequest:
      required:
      - city
      - dateOfBirth
      - idNumber
      - idType
      - line1
      - postalCode
      - state
      type: object
      properties:
        dateOfBirth:
          type: string
          description: "The date of birth of the user (Format: YYYY-MM-DD)"
        idType:
          type: string
          description: The type of ID
          enum:
          - SSN
        idNumber:
          type: string
          description: The number of ID
        line1:
          type: string
          description: The first address line of the user
        line2:
          type: string
          description: The second address line of the user
        city:
          type: string
          description: The city of the user's address
        state:
          type: string
          description: "The state of the user's address (Format: 2-Letter state abbreviation.\
            \ ex: CA)"
        postalCode:
          type: string
          description: The postal code of the user's address
        nationality:
          type: string
          description: The nationality of the user
        occupation:
          type: string
          description: The occupation of the user
      description: ""
    UpdateWalletRequest:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: A name for the wallet
      description: ""
    UpdateWebhookRequest:
      type: object
      properties:
        url:
          type: string
          description: The url for the client's webhook endpoint
        events:
          type: array
          description: The events to subscribe to
          items:
            type: string
          enum:
          - KYC_UPDATED
          - ACTIVITY_UPDATED
          - BANK_UPDATED
        name:
          maxLength: 50
          minLength: 4
          type: string
          description: A name for the webhook
      description: ""
    VerifyMagicLinkRequest:
      required:
      - token
      type: object
      properties:
        token:
          type: string
          description: The OTP to authenticate
      description: ""
    ActivateBankLinkResponse:
      type: object
      properties:
        bankAccount:
          $ref: '#/components/schemas/BankAccount'
      description: ""
      example:
        bankAccount:
          linkStatus: INACTIVE
          createTime: createTime
          verificationStatus: IN_REVIEW
          name: name
          updateTime: updateTime
          id: id
          mask: mask
    AuthResponse:
      required:
      - sessionJwt
      type: object
      properties:
        sessionJwt:
          type: string
          description: The authenticated Bearer token
        userMask:
          $ref: '#/components/schemas/UserMask'
        user:
          $ref: '#/components/schemas/User'
      description: ""
      example:
        sessionJwt: sessionJwt
        userMask:
          createTime: createTime
          emailMask: emailMask
          updateTime: updateTime
          id: id
          phoneMask: phoneMask
        user:
          lastName: lastName
          country: country
          occupation: occupation
          flags:
          - flags
          - flags
          updateTime: updateTime
          firstName: firstName
          nationality: nationality
          kyc:
            idvResult: UNKNOWN
            createTime: createTime
            dobResult: UNKNOWN
            updateTime: updateTime
            addressResult: UNKNOWN
            fraudResult: UNKNOWN
            status: UNKNOWN
          createTime: createTime
          phone: phone
          middleName: middleName
          id: id
          connectedBankAccounts:
          - linkStatus: INACTIVE
            createTime: createTime
            verificationStatus: IN_REVIEW
            name: name
            updateTime: updateTime
            id: id
            mask: mask
          - linkStatus: INACTIVE
            createTime: createTime
            verificationStatus: IN_REVIEW
            name: name
            updateTime: updateTime
            id: id
            mask: mask
          email: email
    AuthenticateCryptoWalletStartResponse:
      required:
      - challenge
      type: object
      properties:
        challenge:
          type: string
          description: The challenge string to be signed by the requested wallet
      description: ""
      example:
        challenge: challenge
    CalculateAchLimitsResponse:
      type: object
      properties:
        instant:
          $ref: '#/components/schemas/AchLimit'
        daily:
          $ref: '#/components/schemas/AchLimit'
        weekly:
          $ref: '#/components/schemas/AchLimit'
      description: ""
      example:
        daily: null
        weekly: null
        instant:
          limit: limit
          currency: currency
          used: used
          remaining: remaining
    FirstFactorAuthResponse:
      required:
      - sessionJwt
      type: object
      properties:
        sessionJwt:
          type: string
          description: The authenticated Bearer token
        userMask:
          $ref: '#/components/schemas/UserMask'
      description: ""
    GetConfigResponse:
      required:
      - cryptoCurrencies
      type: object
      properties:
        cryptoCurrencies:
          type: array
          description: The currently enabled crypto currencies
          items:
            type: string
          enum:
          - ETH
          - MATIC
          - USDC_ETHEREUM
          - USDC_POLYGON
          - AMKT_POLYGON
      description: ""
      example:
        cryptoCurrencies:
        - cryptoCurrencies
        - cryptoCurrencies
    NetworkFee:
      type: object
      properties:
        cryptoCurrency:
          type: string
          description: Crypto currency
          enum:
          - ETH
          - MATIC
          - USDC_ETHEREUM
          - USDC_POLYGON
          - AMKT_POLYGON
        cryptoFee:
          type: string
          description: Fee amount in crypto currency
        fiatCurrency:
          type: string
          description: Quoted fiat currency
        fiatFee:
          type: string
          description: Fee amount in fiat currency
      description: ""
      example:
        fiatFee: fiatFee
        cryptoFee: cryptoFee
        fiatCurrency: fiatCurrency
        cryptoCurrency: ETH
    Price:
      type: object
      properties:
        cryptoCurrency:
          type: string
          description: Crypto currency
          enum:
          - ETH
          - MATIC
          - USDC_ETHEREUM
          - USDC_POLYGON
          - AMKT_POLYGON
        fiatCurrency:
          type: string
          description: Quoted fiat currency
        price:
          type: string
          description: Price
      description: ""
      example:
        fiatCurrency: fiatCurrency
        price: price
        cryptoCurrency: ETH
    GetCryptoPricesResponse:
      required:
      - networkFees
      - prices
      type: object
      properties:
        prices:
          type: array
          description: The quoted prices
          items:
            $ref: '#/components/schemas/Price'
        networkFees:
          type: array
          description: The current network fees
          items:
            $ref: '#/components/schemas/NetworkFee'
      description: ""
      example:
        networkFees:
        - fiatFee: fiatFee
          cryptoFee: cryptoFee
          fiatCurrency: fiatCurrency
          cryptoCurrency: ETH
        - fiatFee: fiatFee
          cryptoFee: cryptoFee
          fiatCurrency: fiatCurrency
          cryptoCurrency: ETH
        prices:
        - fiatCurrency: fiatCurrency
          price: price
          cryptoCurrency: ETH
        - fiatCurrency: fiatCurrency
          price: price
          cryptoCurrency: ETH
    IdvResponse:
      type: object
      properties:
        status:
          type: string
          description: The status of the user's identity verification
          enum:
          - UNKNOWN
          - NOT_STARTED
          - SUBMITTED
          - IN_REVIEW
          - APPROVED
          - DECLINED
        url:
          type: string
          description: The URL to provide the user to complete identity verification
      description: ""
      example:
        url: url
        status: UNKNOWN
    InitiateAchResponse:
      type: object
      properties:
        activityItem:
          $ref: '#/components/schemas/ActivityItem'
      description: ""
      example:
        activityItem:
          metadata: {}
          createTime: createTime
          fiat:
            bankAccount:
              linkStatus: INACTIVE
              createTime: createTime
              verificationStatus: IN_REVIEW
              name: name
              updateTime: updateTime
              id: id
              mask: mask
            amount: amount
            fundingMethod: ACH_ORIGINATED_STANDARD
            currency: USD
            status: PENDING
            direction: CREDIT
          updateTime: updateTime
          id: id
          crypto:
            amount: amount
            wallet:
              address: address
              createTime: createTime
              name: name
              updateTime: updateTime
              id: id
              type: EVM
            ratioFee: ratioFee
            price: price
            networkFee: networkFee
            currency: ETH
            transactionHash: transactionHash
            status: PENDING
            direction: CREDIT
    RequestBankLinkResponse:
      required:
      - linkToken
      type: object
      properties:
        linkToken:
          type: string
          description: The link token for the Plaid integration
      description: ""
      example:
        linkToken: linkToken
    SecondFactorAuthResponse:
      required:
      - sessionJwt
      type: object
      properties:
        sessionJwt:
          type: string
          description: The authenticated Bearer token
        user:
          $ref: '#/components/schemas/User'
      description: ""
    SendEmailOtpResponse:
      required:
      - emailId
      - emailMask
      type: object
      properties:
        emailId:
          type: string
          description: The ID of the email address
        emailMask:
          type: string
          description: The masked email address
      description: ""
      example:
        emailMask: emailMask
        emailId: emailId
    SendSmsOtpResponse:
      required:
      - phoneId
      type: object
      properties:
        phoneId:
          type: string
          description: The ID of the phone number
        phoneMask:
          type: string
          description: The last 4 digits of the phone number
      description: ""
      example:
        phoneId: phoneId
        phoneMask: phoneMask
    UserMask:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the user
        createTime:
          type: string
          description: The time the user was created
        updateTime:
          type: string
          description: The time the user was last updated
        phoneMask:
          type: string
          description: The last 4 digits of the user's phone number
        emailMask:
          type: string
          description: The user's masked email address
      description: ""
      example:
        createTime: createTime
        emailMask: emailMask
        updateTime: updateTime
        id: id
        phoneMask: phoneMask
    User:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the user
        createTime:
          type: string
          description: The time the user was created
        updateTime:
          type: string
          description: The time the user was last updated
        firstName:
          type: string
          description: The first name of the user
        middleName:
          type: string
          description: The middle name of the user
        lastName:
          type: string
          description: The last name of the user
        email:
          type: string
          description: The email of the user
        country:
          type: string
          description: The country of the user
        phone:
          type: string
          description: The phone number of the user
        nationality:
          type: string
          description: The nationality of the user
        occupation:
          type: string
          description: The occupation of the user
        kyc:
          $ref: '#/components/schemas/Kyc'
        connectedBankAccounts:
          type: array
          description: The array of connected bank accounts for the user
          items:
            $ref: '#/components/schemas/BankAccount'
        flags:
          type: array
          description: "An array of review flags set on the user, if any"
          items:
            type: string
          enum:
          - F0000
          - F0001
          - F1000
          - F1001
          - F1002
          - F2000
          - F2001
      description: ""
      example:
        lastName: lastName
        country: country
        occupation: occupation
        flags:
        - flags
        - flags
        updateTime: updateTime
        firstName: firstName
        nationality: nationality
        kyc:
          idvResult: UNKNOWN
          createTime: createTime
          dobResult: UNKNOWN
          updateTime: updateTime
          addressResult: UNKNOWN
          fraudResult: UNKNOWN
          status: UNKNOWN
        createTime: createTime
        phone: phone
        middleName: middleName
        id: id
        connectedBankAccounts:
        - linkStatus: INACTIVE
          createTime: createTime
          verificationStatus: IN_REVIEW
          name: name
          updateTime: updateTime
          id: id
          mask: mask
        - linkStatus: INACTIVE
          createTime: createTime
          verificationStatus: IN_REVIEW
          name: name
          updateTime: updateTime
          id: id
          mask: mask
        email: email
    Wallet:
      required:
      - address
      - createTime
      - id
      - type
      - updateTime
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the wallet
        createTime:
          type: string
          description: The time the wallet was created
        updateTime:
          type: string
          description: The time the wallet was last updated
        address:
          type: string
          description: The address of the wallet
        name:
          type: string
          description: The nickname of the wallet
        type:
          type: string
          description: The type of wallet to authenticate
          enum:
          - EVM
      description: ""
      example:
        address: address
        createTime: createTime
        name: name
        updateTime: updateTime
        id: id
        type: EVM
    Webhook:
      required:
      - createTime
      - events
      - id
      - updateTime
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the webhook
        createTime:
          type: string
          description: The time the webhook was created
        updateTime:
          type: string
          description: The time the webhook was last updated
        name:
          type: string
          description: The name of the webhook
        events:
          type: array
          description: ""
          items:
            type: string
          enum:
          - KYC_UPDATED
          - BANK_UPDATED
          - ACTIVITY_UPDATED
        secret:
          type: string
          description: The secret of the webhook. This is only returned here when
            creating a webhook.
      description: ""
      example:
        createTime: createTime
        name: name
        updateTime: updateTime
        id: id
        secret: secret
        events:
        - events
        - events
  securitySchemes:
    ClientSecret:
      type: apiKey
      name: ratio-client-secret
      in: header
    ClientId:
      type: apiKey
      name: ratio-client-id
      in: header
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
